{
    "plugins": [
        "esformatter-quotes",
        "esformatter-jsx",
        "esformatter-remove-trailing-commas",
        "esformatter-collapse-objects",
        "esformatter-use-strict",
        "esformatter-align"
    ],
    "indent": {
        "value": "    "
    },
    "quotes": {
        "type": "single",
        "avoidEscape": true
    },
    "jsx": {
        "formatJSX": true,
        "attrsOnSameLineAsTag": false, // move each attribute to its own line
        "maxAttrsOnTag": 3, // if lower or equal than 3 attributes, they will be kept on a single line
        "firstAttributeOnSameLine": true, // keep the first attribute in the same line as the tag
        "formatJSXExpressions": true, // default true, if false jsxExpressions won't be recursively formatted
        "JSXExpressionsSingleLine": true, // default true, if false the JSXExpressions might span several lines
        "alignWithFirstAttribute": false, // do not align attributes with the first tag
        "spaceInJSXExpressionContainers": " ", // default to one space. Make it empty if you don't like spaces between JSXExpressionContainers
        "removeSpaceBeforeClosingJSX": false, // default false. if true <React.Something /> => <React.Something/>
        "closingTagOnNewLine": false, // default false. if true attributes on multiple lines will close the tag on a new line
        "htmlOptions": {
            "brace_style": "collapse",
            "indent_char": " ",
            "indent_size": 4,
            "max_preserve_newlines": 2,
            "preserve_newlines": true,
            "wrap_line_length": 120
        }
    },
    "lineBreak": {
        "before": {
            "ArrayExpressionClosing": 1
        },
        "after": {
            "ArrayExpressionOpening": 1,
            "ArrayExpressionComma": 1
        }
    },
    "whiteSpace": {
        "before": {
            "PropertyName": 1
        }
    },
    "align": {
        "ObjectExpression":     0,
        "VariableDeclaration":  0,
        "AssignmentExpression": 0,
        "TernaryExpression":    0,
        "OrExpression":         0,
        "SpreadAlignment":      "key", // optional: "value"
        "ShorthandAlignment":   "key"  // optional: "value"
    }
}